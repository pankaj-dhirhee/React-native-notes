'useEffect()' AS COMPONENT UNMOUNT

To do anything on Component unmount using useEffect() hook, you can return a function


Example 16.1.1 calling a function on Component unmount

'App.tsx' =>

import React, {useEffect, useState} from 'react';
import {Button, StyleSheet, Text, View} from 'react-native';

const App = () => {
  const [show, setshow] = useState(true);

  return (
    <View>
      <Text style={styles.topHeading}>useEffect hook in React Native </Text>

      <Button
        onPress={() => setshow(!show)}
        title="Click me to hide or show users component"
      />
      {show ? <Users /> : null}
    </View>
  );
};

const Users = () => {
  useEffect(() => {
    // This callback will be called on Component unmount
    return () => console.log('useEffect called on unmount...');
  });

  return (
    <View>
      <Text style={styles.topHeading}>Users component </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  topHeading: {
    fontSize: 30,
    color: 'red',
    marginBottom: 20,
  },
  smallText: {
    fontSize: 20,
    color: 'whitesmoke',
  },
});

export default App;


----------------------------------------------------------------------------------------------------------------------------------